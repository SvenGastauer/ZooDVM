scale_y_reverse()+
theme_classic()+
scale_fill_viridis_c(limits=c(232,235))
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_viridis_c(limits=c(233,240))
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_viridis_c(limits=c(233,236))
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_viridis_c(limits=c(232,236))
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_viridis_c(limits=c(232,236), oobs=scales::squish())
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_viridis_c(limits=c(232,236), oobs=scales::squish)
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_viridis_c(limits=c(232,236), oob=scales::squish)
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='blue')+
scale_y_reverse()+
theme_classic()+
scale_fill_viridis_c(limits=c(232,236), oob=scales::squish)
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='blue')+
scale_y_reverse()+
theme_classic()+
scale_fill_viridis_c(limits=c(0,236), oob=scales::squish)
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_viridis_c(limits=c(232,236), oob=scales::squish)
unique(gdm$Dive)
gdm = gray %>% group_by(Dive, depth_r)%>%summarise(gray=mean(256-na.omit(gray_val)))
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_viridis_c(limits=c(232,236), oob=scales::squish)
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_viridis_c(limits=c(0,10), oob=scales::squish)
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_viridis_c(limits=c(0,30), oob=scales::squish)
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_viridis_c(limits=c(10,30), oob=scales::squish)
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_viridis_c(limits=c(10,25), oob=scales::squish)
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_viridis_c(limits=c(20,25), oob=scales::squish)
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradient(low='white',high='black')
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradient(low='white',high='black',limits=c(20,25))
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradient(low='white',high='black',limits=c(20,25), oob=scales::squish)
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradient(low='white',high='black',limits=c(20,25), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradient(low='white',high='black',limits=c(20,24), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
gdm = gray %>% group_by(Dive, depth_r)%>%summarise(gray=max(256-na.omit(gray_val)))
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradient(low='white',high='black',limits=c(20,24), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
gdm = gray %>% group_by(Dive, depth_r)%>%summarise(gray=median(256-na.omit(gray_val)))
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradient(low='white',high='black',limits=c(20,24), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradient(low='white',high='black',limits=c(22,24), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradient(low='white',high='black',limits=c(22,26), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradient(low='white',high='black',limits=c(22,25), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
230/256
70/256
gdm = gray %>% group_by(Dive, depth_r)%>%summarise(gray=median(na.omit(gray_val)))
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray/256))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradient(low='white',high='black',limits=c(0,1), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray/256))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradient(low='white',high='black',limits=c(0.8,1), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray/256))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradient(low='white',high='black',limits=c(0.9,1), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradient(low='white',high='black',limits=c(21,26), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradient(low='white',high='black',limits=c(231,236), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradient(low='white',high='black',limits=c(232,236), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray-256))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradient(low='white',high='black',limits=c(21,26), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray-256))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradient(low='white',high='black',limits=c(20,26), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=gray-256))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradient(low='white',high='black',limits=c(0,26), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=256-gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradient(low='white',high='black',limits=c(0,26), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=256-gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradient(low='white',high='black',limits=c(21,26), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=256-gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradient(low='white',high='black',limits=c(22,26), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=256-gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradientn(colors=rdylbu(15))
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=256-gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradientn(colors=pals::brewer.rdylbu(15))
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=256-gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradientn(colors=pals::brewer.rdylbu(15),limits=c(22,26), oob=scales::squish)
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=256-gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradientn(colors=rev(pals::brewer.rdylbu(15)),limits=c(22,26), oob=scales::squish)
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=256-gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradientn(colors=rev(pals::brewer.rdylbu(15)),limits=c(22,24), oob=scales::squish)
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=256-gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradientn(colors=rev(pals::brewer.rdylbu(15)),limits=c(21,24), oob=scales::squish)
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=256-gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradientn(colors=rev(pals::brewer.rdylbu(15)),limits=c(21,24), oob=scales::squish)+
#scale_fill_gradient(low='white',high='black',limits=c(22,26), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
res=5
gray$depth_r = round(gray$pressure_dbar/res)*res
gray$Dive = as.numeric(substr(gray$dive_number, 2,nchar(gray$dive_number)))
gdm = gray %>% group_by(Dive, depth_r)%>%summarise(gray=median(na.omit(gray_val)))
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=256-gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradientn(colors=rev(pals::brewer.rdylbu(15)),limits=c(21,24), oob=scales::squish)+
#scale_fill_gradient(low='white',high='black',limits=c(22,26), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
res=.5
gray$depth_r = round(gray$pressure_dbar/res)*res
gray$Dive = as.numeric(substr(gray$dive_number, 2,nchar(gray$dive_number)))
gdm = gray %>% group_by(Dive, depth_r)%>%summarise(gray=median(na.omit(gray_val)))
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=256-gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradientn(colors=rev(pals::brewer.rdylbu(15)),limits=c(21,24), oob=scales::squish)+
#scale_fill_gradient(low='white',high='black',limits=c(22,26), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
miss.bath <- getNOAA.bathy(lon1 = (min(gps$Lon)-0.1), lon2 = ceiling(max(gps$Lon)+0.1),
lat1 = floor(min(gps$Lat)-0.1), lat2 = ceiling(max(gps$Lat)+0.1))
gps
library(marmap)
miss.bath <- getNOAA.bathy(lon1 = (min(gps$Lon)-0.1), lon2 = ceiling(max(gps$Lon)+0.1),
lat1 = floor(min(gps$Lat)-0.1), lat2 = ceiling(max(gps$Lat)+0.1))
p <- autoplot(miss.bath, geom = c("raster","contour"), colour = "white", interpolate=TRUE) +
scale_fill_gradientn(name='',
values = scales::rescale(c(min(fortify.bathy(miss.bath)$z),
-.1, 0, max(fortify.bathy(miss.bath)$z))),
colors = c("steelblue4", "#C7E0FF", "grey50", "grey80"))+
geom_line(data=gps,aes(x=Lon, y=Lat),col='gray')+
ylab('Latitude')+xlab('Longitude')+
theme_classic()+
theme(text=element_text(size=16),
axis.text.x=element_text(angle=75,hjust=0, vjust=0),
legend.text = element_text(size=10))
p
update.packages(c('rgdal','raster'))
update.packages(c('rgdal','raster','marmap'))
update.packages('rgdal')
p <- autoplot(miss.bath, geom = c("raster","contour"), colour = "white", interpolate=TRUE) +
scale_fill_gradientn(name='',
values = scales::rescale(c(min(fortify.bathy(miss.bath)$z),
-.1, 0, max(fortify.bathy(miss.bath)$z))),
colors = c("steelblue4", "#C7E0FF", "grey50", "grey80"))+
geom_line(data=gps,aes(x=Lon, y=Lat),col='gray')+
ylab('Latitude')+xlab('Longitude')+
theme_classic()+
theme(text=element_text(size=16),
axis.text.x=element_text(angle=75,hjust=0, vjust=0),
legend.text = element_text(size=10))
if (bathy){
miss.bath <- getNOAA.bathy(lon1 = (min(gps$Lon)-0.1), lon2 = ceiling(max(gps$Lon)+0.1),
lat1 = floor(min(gps$Lat)-0.1), lat2 = ceiling(max(gps$Lat)+0.1))
p <- autoplot(miss.bath, geom = c("raster","contour"), colour = "white", interpolate=TRUE) +
scale_fill_gradientn(name='',
values = scales::rescale(c(min(fortify.bathy(miss.bath)$z),
-.1, 0, max(fortify.bathy(miss.bath)$z))),
colors = c("steelblue4", "#C7E0FF", "grey50", "grey80"))+
geom_line(data=gps,aes(x=Lon, y=Lat),col='gray')+
ylab('Latitude')+xlab('Longitude')+
theme_classic()+
theme(text=element_text(size=16),
axis.text.x=element_text(angle=75,hjust=0, vjust=0),
legend.text = element_text(size=10))
}else{
p <- ggplot(data=gps,aes(x=Lon, y=Lat, group=Dive),col='gray')+geom_line()+
#scale_x_continuous(limits=c(min(gps$Lon)-0.1, max(gps$Lon)+0.1))+
#scale_y_continuous(limits=c(min(gps$Lat)-0.1, max(gps$Lat)+0.1), expand=c(0,0))+
ylab('Latitude')+xlab('Longitude')+
theme_classic()+
theme(text=element_text(size=16),
axis.text.x=element_text(angle=75,hjust=0, vjust=0),
legend.text = element_text(size=10))
}
bathy=TRUE
miss.bath <- getNOAA.bathy(lon1 = (min(gps$Lon)-0.1), lon2 = ceiling(max(gps$Lon)+0.1),
lat1 = floor(min(gps$Lat)-0.1), lat2 = ceiling(max(gps$Lat)+0.1))
p <- autoplot(miss.bath, geom = c("raster","contour"), colour = "white", interpolate=TRUE) +
scale_fill_gradientn(name='',
values = scales::rescale(c(min(fortify.bathy(miss.bath)$z),
-.1, 0, max(fortify.bathy(miss.bath)$z))),
colors = c("steelblue4", "#C7E0FF", "grey50", "grey80"))+
geom_line(data=gps,aes(x=Lon, y=Lat),col='gray')+
ylab('Latitude')+xlab('Longitude')+
theme_classic()+
theme(text=element_text(size=16),
axis.text.x=element_text(angle=75,hjust=0, vjust=0),
legend.text = element_text(size=10))
p
dvm_app()
dvm_app(path=path)
library(ZooDVM)
path
roxygen2::roxygenize()
getwd()
setwd("C:\\Users\\sven\\Documents\\Zonar\\DVM\\")
roxygen2::roxygenize()
ls
ls()
setwd("C:\\Users\\sven\\Documents\\Zonar\\DVM\\R")
setwd("C:\\Users\\sven\\Documents\\Zonar\\DVM\\ZooDVM/")
roxygen2::roxygenize()
warnings()
devtools::build()
roxygen2::roxygenise()
roxygen2::roxygenize()
setwd('C:\\Users\\sven\\Documents\\Zonar\\data\\gray\\')
gray <- read.csv('LJ.csv')
library(ggplot2)
library(dplyr)
res=.5
gray$depth_r = round(gray$pressure_dbar/res)*res
gray$Dive = as.numeric(substr(gray$dive_number, 2,nchar(gray$dive_number)))
gdm = gray %>% group_by(Dive, depth_r)%>%summarise(gray=median(na.omit(gray_val)))
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=256-gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradientn(colors=rev(pals::brewer.rdylbu(15)),limits=c(21,24), oob=scales::squish)+
#scale_fill_gradient(low='white',high='black',limits=c(22,26), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
setwd('C:\\Users\\sven\\Documents\\Zonar\\data\\gray\\')
gray <- read.csv('LJ2.csv')
library(ggplot2)
library(dplyr)
res=.5
gray$depth_r = round(gray$pressure_dbar/res)*res
gray$Dive = as.numeric(substr(gray$dive_number, 2,nchar(gray$dive_number)))
gdm = gray %>% group_by(Dive, depth_r)%>%summarise(gray=median(na.omit(gray_val)))
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=256-gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradientn(colors=rev(pals::brewer.rdylbu(15)),limits=c(21,24), oob=scales::squish)+
#scale_fill_gradient(low='white',high='black',limits=c(22,26), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
gdm = gray %>% group_by(Dive, depth_r)%>%summarise(gray=max(na.omit(gray_val)))
ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=256-gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradientn(colors=rev(pals::brewer.rdylbu(15)),limits=c(21,24), oob=scales::squish)+
#scale_fill_gradient(low='white',high='black',limits=c(22,26), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
library(plotly)
p<-ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=256-gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradientn(colors=rev(pals::brewer.rdylbu(15)),limits=c(21,24), oob=scales::squish)+
#scale_fill_gradient(low='white',high='black',limits=c(22,26), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
library(plotly)
ggplotly(p)
gdm = gray %>% group_by(Dive, depth_r)%>%summarise(gray=median(na.omit(gray_val)))
p<-ggplot(data=gdm, aes(x=Dive, y=depth_r, fill=256-gray))+geom_tile(na.value='transparent')+
scale_y_reverse()+
theme_classic()+
scale_fill_gradientn(colors=rev(pals::brewer.rdylbu(15)),limits=c(21,24), oob=scales::squish)+
#scale_fill_gradient(low='white',high='black',limits=c(22,26), oob=scales::squish)+
xlab('Dive #')+ylab('Depth [m]')
ggplotly(p)
ZooDVM::dvm_app()
path
ZooDVM::dvm_app(path)
library(plotly)
library(ZooDVM)
require(ggplot2)
library(dplyr)
library(marmap)
library(dplyr)
dd='C:\\Users\\sven\\Documents\\Zonar\\data\\bath\\'
utm_zone = as.numeric(read.table(paste0(dd,'s_ca_25mbathy.prj'), nrows=8, header=FALSE)[2,2])
bres= read.asciigrid(fname = paste0(dd,'s_ca_25mbathy.asc'), proj4string=CRS(paste0("+proj=utm +zone=",utm_zone)))
utm_zone
bres
coord=bres@coords
bres = spTransform(bres, CRS('+proj=longlat'))
#get missions
mm = get_mission(datadir)
sel = grep('*LJ*',mm$missions)
sel=16
mission = mm$missions[sel]
#get Sv data
ncpath = ncpath_from_csvpath(datadir)
missions = list.files(ncpath_from_csvpath(datadir), pattern='*nc')
Sv = get_sv(datadir,sel)
env = get_env(ncpath = ncpath, sel)
Sv1000 = Sv$data$`1000kHz`
get_inter <-function(data,vstart,vend){
tt = data.frame(do.call(cbind, lapply(as.list(unique(data$Dive)),
function(x) seq(data[data$Dive==x,vstart][1],
data[data$Dive==x,vend][1],
length=length(data$Dive[data$Dive==x])))))
return(stack(tt)$values)
}
Sv1000$Time = as.POSIXct(get_inter(Sv1000,'Time_start','Time_end'), origin='1970-01-01', tz='UTC')
Sv1000$Lon  = get_inter(Sv1000,'Lon_start', 'Lon_end')
Sv1000$Lat  = get_inter(Sv1000,'Lat_start', 'Lat_end')
Sv1000 = Sv1000[!is.na(Sv1000$Sv),]
bmat = bres@data
coord=bres@coords
coord[,1] = round(coord[,1],3)
coord[,2] = round(coord[,2],3)
bbmat = as.matrix(bmat,length(unique(coord[,1])), length(unique(coord[,2])))
lons = coord[,1]
lats=coord[,2]
#bres=as.data.frame(bres)
bb=bres
bres = as.data.frame(bres)
names(bres) = c('BD','lon','lat')
bres$lon <- round(bres$lon,3)
bres$lat <- round(bres$lat,3)
bres = bres[bres$lon < max(Sv1000$Lon)+0.05,]
bres = bres[bres$lat < max(Sv1000$Lat)+0.05,]
bres = bres[bres$lon > min(Sv1000$Lon)-0.05,]
bres = bres[bres$lat > min(Sv1000$Lat)-0.05,]
head(bres)
getwd()
write.csv(path='C:\\Users\\sven\\Documents\\Zonar\\data\\bath\\bres.csv', bres)
write.csv(bres,'C:\\Users\\sven\\Documents\\Zonar\\data\\bath\\bres.csv')
library(ZooScatR)
ZooScatR::DWBAapp()
shapedir = 'C:\\Users\\sven\Documents\\krill shapes\\UNBENDlateralshapes\\'
?ZooScatR
list.files(path=shapedir, pattern='*.dat)
library(ZooScatR)
shapedir = 'C:\\Users\\sven\\Documents\\krill shapes\\UNBENDlateralshapes\\'
shapedir = 'C:\\Users\\sven\\Documents\\krill shapes\\UNBENDlateralshapes\\'
library(ZooScatR)
shapedir = 'C:\\Users\\sven\\Documents\\krill shapes\\UNBENDlateralshapes\\'
sf = list.files(path=shapedir, pattern='*.dat)
sf = list.files(path=shapedir, pattern='*.dat')
sf = list.files(path=shapedir, pattern='*.dat')
sf = list.files(path=shapedir, pattern='*.dat')
sf
fname <- paste0(system.file(package="ZooScatR"),"/extdata/configs/config_0.dat") #Loacation of the parameters file
para = read_para(fname) #Read parameters file
para$simu$var0 = 0 #simulate from 10
para$simu$var1 = 180 #...to 300 kHz
para$simu$ni = 200 #resudce the number of elements and frequencies to improve speed
para$simu$n = 181
para$simu$var_indx = 2
#Create list with soundspeed info
misc <- list(cw=1500)
#change to the more realistic krill shape
para$shape$prof_name <- sf[1]
res <- bscat(para=para, misc=misc)
sf = list.files(path=shapedir, pattern='*.dat', full.names = TRUE)
fname <- paste0(system.file(package="ZooScatR"),"/extdata/configs/config_0.dat") #Loacation of the parameters file
para = read_para(fname) #Read parameters file
para$simu$var0 = 0 #simulate from 10
para$simu$var1 = 180 #...to 300 kHz
para$simu$ni = 200 #resudce the number of elements and frequencies to improve speed
para$simu$n = 181
para$simu$var_indx = 2
#Create list with soundspeed info
misc <- list(cw=1500)
para$shape$prof_name <- sf[1]
res <- bscat(para=para, misc=misc)
res$shplot
res$rplot
para$shape$L_a
para$shape$L_a = 8
res$shplot
para$shape$L_a = 16
res$shplot
res$rplot
para$shape$L_a = 8
res$rplot
res$y
res$var
result=data.frame()
para$shape$prof_name <- sf[1]
L_a = 8
res <- bscat(para=para, misc=misc)
para$shape$L_a = L_a
res$shplot
res$y
temp= res$y
temp$Theta = res$var
temp$L_a = L_a
temp$shape = sf[1]
result=rbind(result, temp)
result
temp
temp= data.fram(TS=res$y)
temp= data.frame(TS=res$y)
temp$Theta = res$var
temp$L_a = L_a
temp$shape = sf[1]
result=rbind(result, temp)
result
L_a = 16
res <- bscat(para=para, misc=misc)
para$shape$L_a = L_a
res$shplot
res$y
temp= data.frame(TS=res$y)
temp$Theta = res$var
temp$L_a = L_a
temp$shape = sf[1]
result=rbind(result, temp)
ggplot(data=result,aes(x=Theta,y=TS, group=L_a))+geom_line()
View(result)
View(result)
devtools::build_vignettes()
